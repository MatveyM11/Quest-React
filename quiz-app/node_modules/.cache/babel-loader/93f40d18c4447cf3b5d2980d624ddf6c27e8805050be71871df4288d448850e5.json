{"ast":null,"code":"var _jsxFileName = \"/home/marat/quiz-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ChatContainer from './components/ChatContainer';\nimport InputBox from './components/InputBox';\nimport ChatBubble from './components/ChatBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\nbackground-color: #e9ecef;\nwidth: 100%;\n`;\n_c = AppContainer;\nconst App = () => {\n  _s();\n  const questions = [{\n    question: 'What is the capital of France?',\n    answer: 'Paris'\n  }, {\n    question: 'What is 2 + 2?',\n    answer: '4'\n  }, {\n    question: 'What is the capital of Spain?',\n    answer: 'Madrid'\n  }];\n  const [messages, setMessages] = useState([{\n    text: questions[0].question,\n    isUser: false\n  }]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const handleSend = message => {\n    if (isTyping) return;\n    const newMessages = [...messages, {\n      text: message,\n      isUser: true\n    }];\n    const isCorrect = message.trim().toLowerCase() === questions[currentQuestionIndex].answer.trim().toLowerCase();\n    if (isCorrect) {\n      setScore(score + 1);\n      newMessages.push({\n        text: 'Correct!',\n        isUser: false\n      });\n    } else {\n      newMessages.push({\n        text: `Incorrect. The correct answer is ${questions[currentQuestionIndex].answer}.`,\n        isUser: false\n      });\n    }\n    setMessages(newMessages);\n    handleNextQuestion(newMessages, currentQuestionIndex + 1, isCorrect);\n  };\n  const handleNextQuestion = (newMessages, nextQuestionIndex, isCorrect) => {\n    setIsTyping(true);\n    if (nextQuestionIndex < questions.length) {\n      setMessages([...newMessages, {\n        text: questions[nextQuestionIndex].question,\n        isUser: false,\n        onComplete: () => setIsTyping(false)\n      }]);\n      setCurrentQuestionIndex(nextQuestionIndex);\n    } else {\n      setMessages([...newMessages, {\n        text: `Quiz finished! Your score is ${score + (isCorrect ? 1 : 0)}/${questions.length}.`,\n        isUser: false,\n        onComplete: () => setIsTyping(false)\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatContainer, {\n      messages: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n        message: msg.text || '',\n        isUser: msg.isUser,\n        onComplete: msg.onComplete\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      onSend: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nMCdU8KTqml5YUpjGXolp/Z1Xdk=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","styled","ChatContainer","InputBox","ChatBubble","jsxDEV","_jsxDEV","AppContainer","div","_c","App","_s","questions","question","answer","messages","setMessages","text","isUser","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","isTyping","setIsTyping","handleSend","message","newMessages","isCorrect","trim","toLowerCase","push","handleNextQuestion","nextQuestionIndex","length","onComplete","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c2","$RefreshReg$"],"sources":["/home/marat/quiz-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ChatContainer from './components/ChatContainer';\nimport InputBox from './components/InputBox';\nimport ChatBubble from './components/ChatBubble';\n\nconst AppContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\nbackground-color: #e9ecef;\nwidth: 100%;\n`;\n\nconst App = () => {\n    const questions = [\n        { question: 'What is the capital of France?', answer: 'Paris' },\n        { question: 'What is 2 + 2?', answer: '4' },\n        { question: 'What is the capital of Spain?', answer: 'Madrid' }\n    ];\n\n    const [messages, setMessages] = useState([\n        { text: questions[0].question, isUser: false }\n    ]);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [score, setScore] = useState(0);\n    const [isTyping, setIsTyping] = useState(false);\n\n    const handleSend = (message) => {\n        if (isTyping) return;\n\n        const newMessages = [\n            ...messages,\n            { text: message, isUser: true }\n        ];\n\n        const isCorrect = message.trim().toLowerCase() === questions[currentQuestionIndex].answer.trim().toLowerCase();\n\n        if (isCorrect) {\n            setScore(score + 1);\n            newMessages.push({ text: 'Correct!', isUser: false });\n        } else {\n            newMessages.push({ text: `Incorrect. The correct answer is ${questions[currentQuestionIndex].answer}.`, isUser: false });\n        }\n\n        setMessages(newMessages);\n        handleNextQuestion(newMessages, currentQuestionIndex + 1, isCorrect);\n    };\n\n    const handleNextQuestion = (newMessages, nextQuestionIndex, isCorrect) => {\n        setIsTyping(true);\n\n        if (nextQuestionIndex < questions.length) {\n            setMessages([\n                ...newMessages,\n                { text: questions[nextQuestionIndex].question, isUser: false, onComplete: () => setIsTyping(false) }\n            ]);\n            setCurrentQuestionIndex(nextQuestionIndex);\n        } else {\n            setMessages([\n                ...newMessages,\n                { text: `Quiz finished! Your score is ${score + (isCorrect ? 1 : 0)}/${questions.length}.`, isUser: false, onComplete: () => setIsTyping(false) }\n            ]);\n        }\n    };\n\n    return (\n        <AppContainer>\n        <ChatContainer messages={messages.map((msg, index) => (\n            <ChatBubble\n            key={index}\n            message={msg.text || ''}\n            isUser={msg.isUser}\n            onComplete={msg.onComplete}\n            />\n        ))} />\n        <InputBox onSend={handleSend} />\n        </AppContainer>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}