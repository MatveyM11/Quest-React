{"ast":null,"code":"var _jsxFileName = \"/home/marat/quiz-app/src/components/ChatBubble.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMessageContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    margin-bottom: 10px;\n    width: 100%; /* Ensure full width for proper alignment */\n`;\n_c = BotMessageContainer;\nconst UserMessageContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end;\n    margin-bottom: 10px;\n    width: 100%; /* Ensure full width for proper alignment */\n`;\n_c2 = UserMessageContainer;\nconst IconWrapper = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    overflow: hidden;\n    margin-right: 10px;\n    flex-shrink: 0;\n`;\n_c3 = IconWrapper;\nconst UserIconWrapper = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    overflow: hidden;\n    margin-left: 10px;\n    flex-shrink: 0;\n`;\n_c4 = UserIconWrapper;\nconst Icon = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n_c5 = Icon;\nconst MessageBubble = styled.div`\n    background-color: ${props => props.isUser ? '#007bff' : '#e9ecef'};\n    color: ${props => props.isUser ? '#fff' : '#000'};\n    padding: 10px 15px;\n    border-radius: 15px;\n    max-width: 60%;\n    word-wrap: break-word;\n`;\n_c6 = MessageBubble;\nconst ChatBubble = ({\n  message,\n  isUser\n}) => {\n  if (isUser) {\n    return /*#__PURE__*/_jsxDEV(UserMessageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n        isUser: true,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserIconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          src: `${process.env.PUBLIC_URL}/user_avatar.jpg`,\n          alt: \"User Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(BotMessageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          src: `${process.env.PUBLIC_URL}/itglobal-circle.jpg`,\n          alt: \"Bot Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageBubble, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c7 = ChatBubble;\nexport default ChatBubble;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"BotMessageContainer\");\n$RefreshReg$(_c2, \"UserMessageContainer\");\n$RefreshReg$(_c3, \"IconWrapper\");\n$RefreshReg$(_c4, \"UserIconWrapper\");\n$RefreshReg$(_c5, \"Icon\");\n$RefreshReg$(_c6, \"MessageBubble\");\n$RefreshReg$(_c7, \"ChatBubble\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","BotMessageContainer","div","_c","UserMessageContainer","_c2","IconWrapper","_c3","UserIconWrapper","_c4","Icon","img","_c5","MessageBubble","props","isUser","_c6","ChatBubble","message","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","_c7","$RefreshReg$"],"sources":["/home/marat/quiz-app/src/components/ChatBubble.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst BotMessageContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    margin-bottom: 10px;\n    width: 100%; /* Ensure full width for proper alignment */\n`;\n\nconst UserMessageContainer = styled.div`\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-end;\n    margin-bottom: 10px;\n    width: 100%; /* Ensure full width for proper alignment */\n`;\n\nconst IconWrapper = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    overflow: hidden;\n    margin-right: 10px;\n    flex-shrink: 0;\n`;\n\nconst UserIconWrapper = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    overflow: hidden;\n    margin-left: 10px;\n    flex-shrink: 0;\n`;\n\nconst Icon = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nconst MessageBubble = styled.div`\n    background-color: ${props => (props.isUser ? '#007bff' : '#e9ecef')};\n    color: ${props => (props.isUser ? '#fff' : '#000')};\n    padding: 10px 15px;\n    border-radius: 15px;\n    max-width: 60%;\n    word-wrap: break-word;\n`;\n\nconst ChatBubble = ({ message, isUser }) => {\n    if (isUser) {\n        return (\n            <UserMessageContainer>\n                <MessageBubble isUser>{message}</MessageBubble>\n                <UserIconWrapper>\n                    <Icon src={`${process.env.PUBLIC_URL}/user_avatar.jpg`} alt=\"User Avatar\" />\n                </UserIconWrapper>\n            </UserMessageContainer>\n        );\n    } else {\n        return (\n            <BotMessageContainer>\n                <IconWrapper>\n                    <Icon src={`${process.env.PUBLIC_URL}/itglobal-circle.jpg`} alt=\"Bot Icon\" />\n                </IconWrapper>\n                <MessageBubble>{message}</MessageBubble>\n            </BotMessageContainer>\n        );\n    }\n};\n\nexport default ChatBubble;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}