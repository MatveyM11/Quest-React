{"ast":null,"code":"var _jsxFileName = \"/home/marat/quiz-app/src/components/EmailInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled container for the email input form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailInputContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\nmax-width: 400px;\nmargin: 0 auto;\n`;\n\n// Styled input field for the email\n_c = EmailInputContainer;\nconst EmailInputField = styled.input`\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nfont-size: 16px;\n`;\n\n// Styled submit button for the email form\n_c2 = EmailInputField;\nconst EmailSubmitButton = styled.button`\nwidth: 100%;\npadding: 10px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #007bff;\ncolor: white;\nfont-size: 16px;\ncursor: pointer;\n\n&:hover {\n    background-color: #0056b3;\n}\n`;\n\n// Error message styling\n_c3 = EmailSubmitButton;\nconst ErrorMessage = styled.div`\ncolor: red;\nmargin-bottom: 10px;\n`;\n\n// EmailInput component to handle email submission\n_c4 = ErrorMessage;\nconst EmailInput = ({\n  onEmailSubmit\n}) => {\n  _s();\n  const [email, setEmail] = useState(''); // State to manage the email input\n  const [error, setError] = useState(''); // State to manage the error message\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    if (form.checkValidity()) {\n      onEmailSubmit(email); // Call the onEmailSubmit function when the form is submitted\n      setError(''); // Clear any previous error message\n    } else {\n      setError('Пожалуйста введите правильный email адрес.'); // Set error message for invalid email\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EmailInputContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [\" \", error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(EmailInputField, {\n        type: \"email\" // Input type as email\n        ,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0443 \\u043F\\u043E\\u0447\\u0442\\u0443\" // Placeholder text\n        ,\n        value: email // Bind state to input value\n        ,\n        onChange: e => setEmail(e.target.value) // Update state on input change\n        ,\n        required: true // Make input required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmailSubmitButton, {\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n// Export the EmailInput component for use in other parts of the app\n_s(EmailInput, \"5kvVbuS8LfZ9bEZw7jhpSWJbyXU=\");\n_c5 = EmailInput;\nexport default EmailInput;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"EmailInputContainer\");\n$RefreshReg$(_c2, \"EmailInputField\");\n$RefreshReg$(_c3, \"EmailSubmitButton\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"EmailInput\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","EmailInputContainer","div","_c","EmailInputField","input","_c2","EmailSubmitButton","button","_c3","ErrorMessage","_c4","EmailInput","onEmailSubmit","_s","email","setEmail","error","setError","handleSubmit","e","preventDefault","form","target","checkValidity","children","onSubmit","noValidate","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","required","_c5","$RefreshReg$"],"sources":["/home/marat/quiz-app/src/components/EmailInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled container for the email input form\nconst EmailInputContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\nmax-width: 400px;\nmargin: 0 auto;\n`;\n\n// Styled input field for the email\nconst EmailInputField = styled.input`\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nfont-size: 16px;\n`;\n\n// Styled submit button for the email form\nconst EmailSubmitButton = styled.button`\nwidth: 100%;\npadding: 10px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #007bff;\ncolor: white;\nfont-size: 16px;\ncursor: pointer;\n\n&:hover {\n    background-color: #0056b3;\n}\n`;\n\n// Error message styling\nconst ErrorMessage = styled.div`\ncolor: red;\nmargin-bottom: 10px;\n`;\n\n// EmailInput component to handle email submission\nconst EmailInput = ({ onEmailSubmit }) => {\n    const [email, setEmail] = useState(''); // State to manage the email input\n    const [error, setError] = useState(''); // State to manage the error message\n\n    // Handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.target;\n        if (form.checkValidity()) {\n            onEmailSubmit(email); // Call the onEmailSubmit function when the form is submitted\n            setError(''); // Clear any previous error message\n        } else {\n            setError('Пожалуйста введите правильный email адрес.'); // Set error message for invalid email\n        }\n    };\n\n    return (\n        <EmailInputContainer>\n        <form onSubmit={handleSubmit} noValidate> {/* noValidate to prevent default validation */}\n        {error && <ErrorMessage>{error}</ErrorMessage>} {/* Display error message if exists */}\n        <EmailInputField\n        type=\"email\" // Input type as email\n        placeholder=\"Введите вашу почту\" // Placeholder text\n        value={email} // Bind state to input value\n        onChange={(e) => setEmail(e.target.value)} // Update state on input change\n        required // Make input required\n        />\n        <EmailSubmitButton type=\"submit\">Отправить</EmailSubmitButton> {/* Submit button */}\n        </form>\n        </EmailInputContainer>\n    );\n};\n\n// Export the EmailInput component for use in other parts of the app\nexport default EmailInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAGH,MAAM,CAACI,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAVMF,mBAAmB;AAWzB,MAAMG,eAAe,GAAGN,MAAM,CAACO,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMF,eAAe;AAUrB,MAAMG,iBAAiB,GAAGT,MAAM,CAACU,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAfMF,iBAAiB;AAgBvB,MAAMG,YAAY,GAAGZ,MAAM,CAACI,GAAG;AAC/B;AACA;AACA,CAAC;;AAED;AAAAS,GAAA,GALMD,YAAY;AAMlB,MAAME,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAGF,CAAC,CAACG,MAAM;IACrB,IAAID,IAAI,CAACE,aAAa,CAAC,CAAC,EAAE;MACtBX,aAAa,CAACE,KAAK,CAAC,CAAC,CAAC;MACtBG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACHA,QAAQ,CAAC,4CAA4C,CAAC,CAAC,CAAC;IAC5D;EACJ,CAAC;EAED,oBACIlB,OAAA,CAACC,mBAAmB;IAAAwB,QAAA,eACpBzB,OAAA;MAAM0B,QAAQ,EAAEP,YAAa;MAACQ,UAAU;MAAAF,QAAA,GAAC,GAAC,EACzCR,KAAK,iBAAIjB,OAAA,CAACU,YAAY;QAAAe,QAAA,EAAER;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,EAAC,GAAC,eAChD/B,OAAA,CAACI,eAAe;QAChB4B,IAAI,EAAC,OAAO,CAAC;QAAA;QACbC,WAAW,EAAC,oGAAoB,CAAC;QAAA;QACjCC,KAAK,EAAEnB,KAAM,CAAC;QAAA;QACdoB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACG,MAAM,CAACW,KAAK,CAAE,CAAC;QAAA;QAC3CE,QAAQ,OAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACF/B,OAAA,CAACO,iBAAiB;QAACyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAjB,EAAA,CAjCMF,UAAU;AAAAyB,GAAA,GAAVzB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAT,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}