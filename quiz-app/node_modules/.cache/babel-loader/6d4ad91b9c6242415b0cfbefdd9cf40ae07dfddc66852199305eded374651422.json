{"ast":null,"code":"var _jsxFileName = \"/home/marat/quiz-app/src/components/ChatBubble.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Styled component for the bot message container\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMessageContainer = styled.div`\ndisplay: flex; /* Use flexbox for layout */\nalign-items: flex-start; /* Align items to the start vertically */\nmargin-bottom: 10px; /* Space between messages */\nwidth: 100%; /* Full width for proper alignment */\n`;\n\n// Styled component for the user message container\n_c = BotMessageContainer;\nconst UserMessageContainer = styled.div`\ndisplay: flex; /* Use flexbox for layout */\nalign-items: flex-start; /* Align items to the start vertically */\njustify-content: flex-end; /* Align items to the end horizontally */\nmargin-bottom: 10px; /* Space between messages */\nwidth: 100%; /* Full width for proper alignment */\n`;\n\n// Styled component for the icon wrapper (for bot)\n_c2 = UserMessageContainer;\nconst IconWrapper = styled.div`\nwidth: 70px; /* Set icon width */\nheight: 70px; /* Set icon height */\nborder-radius: 50%; /* Make the icon circular */\noverflow: hidden; /* Hide overflow content */\nmargin-right: 10px; /* Space between icon and message */\nflex-shrink: 0; /* Prevent shrinking */\n\n@media (max-width: 600px) {\n  width: 30px; /* Reduce size on small screens */\n  height: 30px; /* Reduce size on small screens */\n  margin-right: 5px; /* Reduce margin on small screens */\n}\n`;\n\n// Styled component for the icon wrapper (for user)\n_c3 = IconWrapper;\nconst UserIconWrapper = styled.div`\nwidth: 70px; /* Set icon width */\nheight: 70px; /* Set icon height */\nborder-radius: 50%; /* Make the icon circular */\noverflow: hidden; /* Hide overflow content */\nmargin-left: 10px; /* Space between icon and message */\nflex-shrink: 0; /* Prevent shrinking */\n\n@media (max-width: 600px) {\n  width: 30px; /* Reduce size on small screens */\n  height: 30px; /* Reduce size on small screens */\n  margin-left: 5px; /* Reduce margin on small screens */\n}\n`;\n\n// Styled component for the icon image\n_c4 = UserIconWrapper;\nconst Icon = styled.img`\nwidth: 100%; /* Full width of the container */\nheight: 100%; /* Full height of the container */\nobject-fit: cover; /* Cover the container area */\n`;\n\n// Styled component for the message bubble\n_c5 = Icon;\nconst MessageBubble = styled.div`\nbackground-color: ${props => props.isUser ? '#007bff' : '#e9ecef'}; /* Background color based on user */\ncolor: ${props => props.isUser ? '#fff' : '#000'}; /* Text color based on user */\npadding: 10px 15px; /* Padding inside the bubble */\nborder-radius: 15px; /* Rounded corners */\nmax-width: 60%; /* Maximum width */\nword-wrap: break-word; /* Wrap long words */\n\n@media (max-width: 600px) {\n  max-width: 70%; /* Adjust max-width on small screens */\n  padding: 8px 12px; /* Adjust padding on small screens */\n}\n`;\n\n// Functional component for the chat bubble\n_c6 = MessageBubble;\nconst ChatBubble = ({\n  message,\n  isUser\n}) => {\n  if (isUser) {\n    // Return user message layout\n    return /*#__PURE__*/_jsxDEV(UserMessageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n        isUser: true,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(UserIconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          src: `${process.env.PUBLIC_URL}/user_avatar.jpg`,\n          alt: \"User Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  } else {\n    // Return bot message layout\n    return /*#__PURE__*/_jsxDEV(BotMessageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          src: `${process.env.PUBLIC_URL}/itglobal-circle.jpg`,\n          alt: \"Bot Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MessageBubble, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n// Export the ChatBubble component for use in other parts of the app\n_c7 = ChatBubble;\nexport default ChatBubble;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"BotMessageContainer\");\n$RefreshReg$(_c2, \"UserMessageContainer\");\n$RefreshReg$(_c3, \"IconWrapper\");\n$RefreshReg$(_c4, \"UserIconWrapper\");\n$RefreshReg$(_c5, \"Icon\");\n$RefreshReg$(_c6, \"MessageBubble\");\n$RefreshReg$(_c7, \"ChatBubble\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","BotMessageContainer","div","_c","UserMessageContainer","_c2","IconWrapper","_c3","UserIconWrapper","_c4","Icon","img","_c5","MessageBubble","props","isUser","_c6","ChatBubble","message","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","_c7","$RefreshReg$"],"sources":["/home/marat/quiz-app/src/components/ChatBubble.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n// Styled component for the bot message container\nconst BotMessageContainer = styled.div`\ndisplay: flex; /* Use flexbox for layout */\nalign-items: flex-start; /* Align items to the start vertically */\nmargin-bottom: 10px; /* Space between messages */\nwidth: 100%; /* Full width for proper alignment */\n`;\n\n// Styled component for the user message container\nconst UserMessageContainer = styled.div`\ndisplay: flex; /* Use flexbox for layout */\nalign-items: flex-start; /* Align items to the start vertically */\njustify-content: flex-end; /* Align items to the end horizontally */\nmargin-bottom: 10px; /* Space between messages */\nwidth: 100%; /* Full width for proper alignment */\n`;\n\n// Styled component for the icon wrapper (for bot)\nconst IconWrapper = styled.div`\nwidth: 70px; /* Set icon width */\nheight: 70px; /* Set icon height */\nborder-radius: 50%; /* Make the icon circular */\noverflow: hidden; /* Hide overflow content */\nmargin-right: 10px; /* Space between icon and message */\nflex-shrink: 0; /* Prevent shrinking */\n\n@media (max-width: 600px) {\n  width: 30px; /* Reduce size on small screens */\n  height: 30px; /* Reduce size on small screens */\n  margin-right: 5px; /* Reduce margin on small screens */\n}\n`;\n\n// Styled component for the icon wrapper (for user)\nconst UserIconWrapper = styled.div`\nwidth: 70px; /* Set icon width */\nheight: 70px; /* Set icon height */\nborder-radius: 50%; /* Make the icon circular */\noverflow: hidden; /* Hide overflow content */\nmargin-left: 10px; /* Space between icon and message */\nflex-shrink: 0; /* Prevent shrinking */\n\n@media (max-width: 600px) {\n  width: 30px; /* Reduce size on small screens */\n  height: 30px; /* Reduce size on small screens */\n  margin-left: 5px; /* Reduce margin on small screens */\n}\n`;\n\n// Styled component for the icon image\nconst Icon = styled.img`\nwidth: 100%; /* Full width of the container */\nheight: 100%; /* Full height of the container */\nobject-fit: cover; /* Cover the container area */\n`;\n\n// Styled component for the message bubble\nconst MessageBubble = styled.div`\nbackground-color: ${props => (props.isUser ? '#007bff' : '#e9ecef')}; /* Background color based on user */\ncolor: ${props => (props.isUser ? '#fff' : '#000')}; /* Text color based on user */\npadding: 10px 15px; /* Padding inside the bubble */\nborder-radius: 15px; /* Rounded corners */\nmax-width: 60%; /* Maximum width */\nword-wrap: break-word; /* Wrap long words */\n\n@media (max-width: 600px) {\n  max-width: 70%; /* Adjust max-width on small screens */\n  padding: 8px 12px; /* Adjust padding on small screens */\n}\n`;\n\n// Functional component for the chat bubble\nconst ChatBubble = ({ message, isUser }) => {\n  if (isUser) {\n    // Return user message layout\n    return (\n      <UserMessageContainer>\n      <MessageBubble isUser>{message}</MessageBubble>\n      <UserIconWrapper>\n      <Icon src={`${process.env.PUBLIC_URL}/user_avatar.jpg`} alt=\"User Avatar\" />\n      </UserIconWrapper>\n      </UserMessageContainer>\n    );\n  } else {\n    // Return bot message layout\n    return (\n      <BotMessageContainer>\n      <IconWrapper>\n      <Icon src={`${process.env.PUBLIC_URL}/itglobal-circle.jpg`} alt=\"Bot Icon\" />\n      </IconWrapper>\n      <MessageBubble>{message}</MessageBubble>\n      </BotMessageContainer>\n    );\n  }\n};\n\n// Export the ChatBubble component for use in other parts of the app\nexport default ChatBubble;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}