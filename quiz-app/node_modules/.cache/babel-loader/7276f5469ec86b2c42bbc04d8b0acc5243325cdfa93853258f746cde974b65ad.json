{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useTypewriter = (text, speed = 50) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    let index = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText(text.slice(0, index));\n      index += 1;\n      if (index > text.length) {\n        clearInterval(intervalId);\n      }\n    }, speed);\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n  return displayedText;\n};\n_s(useTypewriter, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\nexport default useTypewriter;","map":{"version":3,"names":["useState","useEffect","useTypewriter","text","speed","_s","displayedText","setDisplayedText","index","intervalId","setInterval","slice","length","clearInterval"],"sources":["/home/marat/quiz-app/src/hooks/useTypewriter.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useTypewriter = (text, speed = 50) => {\n    const [displayedText, setDisplayedText] = useState('');\n\n    useEffect(() => {\n        let index = 0;\n        const intervalId = setInterval(() => {\n            setDisplayedText(text.slice(0, index));\n            index += 1;\n            if (index > text.length) {\n                clearInterval(intervalId);\n            }\n        }, speed);\n\n        return () => clearInterval(intervalId);\n    }, [text, speed]);\n\n    return displayedText;\n};\n\nexport default useTypewriter;\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,EAAE,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAIO,KAAK,GAAG,CAAC;IACb,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCH,gBAAgB,CAACJ,IAAI,CAACQ,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,CAAC;MACtCA,KAAK,IAAI,CAAC;MACV,IAAIA,KAAK,GAAGL,IAAI,CAACS,MAAM,EAAE;QACrBC,aAAa,CAACJ,UAAU,CAAC;MAC7B;IACJ,CAAC,EAAEL,KAAK,CAAC;IAET,OAAO,MAAMS,aAAa,CAACJ,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACN,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,OAAOE,aAAa;AACxB,CAAC;AAACD,EAAA,CAjBIH,aAAa;AAmBnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}