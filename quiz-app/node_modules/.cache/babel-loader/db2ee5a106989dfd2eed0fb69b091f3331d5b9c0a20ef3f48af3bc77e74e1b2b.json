{"ast":null,"code":"var _jsxFileName = \"/home/marat/quiz-app/src/components/EmailInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled container for the email input form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailInputContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\nmax-width: 400px;\nmargin: 0 auto;\n`;\n\n// Styled input field for the email\n_c = EmailInputContainer;\nconst EmailInputField = styled.input`\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nfont-size: 16px;\n`;\n\n// Styled submit button for the email form\n_c2 = EmailInputField;\nconst EmailSubmitButton = styled.button`\nwidth: 100%;\npadding: 10px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #007bff;\ncolor: white;\nfont-size: 16px;\ncursor: pointer;\n\n&:hover {\n    background-color: #0056b3;\n}\n`;\n\n// EmailInput component to handle email submission\n_c3 = EmailSubmitButton;\nconst EmailInput = ({\n  onEmailSubmit\n}) => {\n  _s();\n  const [email, setEmail] = useState(''); // State to manage the email input\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email) {\n      onEmailSubmit(email); // Call the onEmailSubmit function when the form is submitted\n    }\n  };\n\n  // Handle key press event\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmit(e); // Submit the form when the Enter key is pressed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EmailInputContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(EmailInputField, {\n        type: \"email\" // Input type as email\n        ,\n        placeholder: \"Enter your email\" // Placeholder text\n        ,\n        value: email // Bind state to input value\n        ,\n        onChange: e => setEmail(e.target.value) // Update state on input change\n        ,\n        onKeyPress: handleKeyPress // Handle Enter key press\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmailSubmitButton, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n// Export the EmailInput component for use in other parts of the app\n_s(EmailInput, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c4 = EmailInput;\nexport default EmailInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"EmailInputContainer\");\n$RefreshReg$(_c2, \"EmailInputField\");\n$RefreshReg$(_c3, \"EmailSubmitButton\");\n$RefreshReg$(_c4, \"EmailInput\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","EmailInputContainer","div","_c","EmailInputField","input","_c2","EmailSubmitButton","button","_c3","EmailInput","onEmailSubmit","_s","email","setEmail","handleSubmit","e","preventDefault","handleKeyPress","key","children","onSubmit","type","placeholder","value","onChange","target","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/home/marat/quiz-app/src/components/EmailInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled container for the email input form\nconst EmailInputContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nwidth: 100%;\nmax-width: 400px;\nmargin: 0 auto;\n`;\n\n// Styled input field for the email\nconst EmailInputField = styled.input`\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nfont-size: 16px;\n`;\n\n// Styled submit button for the email form\nconst EmailSubmitButton = styled.button`\nwidth: 100%;\npadding: 10px;\nborder: none;\nborder-radius: 5px;\nbackground-color: #007bff;\ncolor: white;\nfont-size: 16px;\ncursor: pointer;\n\n&:hover {\n    background-color: #0056b3;\n}\n`;\n\n// EmailInput component to handle email submission\nconst EmailInput = ({ onEmailSubmit }) => {\n    const [email, setEmail] = useState(''); // State to manage the email input\n\n    // Handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (email) {\n            onEmailSubmit(email); // Call the onEmailSubmit function when the form is submitted\n        }\n    };\n\n    // Handle key press event\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit(e); // Submit the form when the Enter key is pressed\n        }\n    };\n\n    return (\n        <EmailInputContainer>\n        <form onSubmit={handleSubmit}>\n        <EmailInputField\n        type=\"email\" // Input type as email\n        placeholder=\"Enter your email\" // Placeholder text\n        value={email} // Bind state to input value\n        onChange={(e) => setEmail(e.target.value)} // Update state on input change\n        onKeyPress={handleKeyPress} // Handle Enter key press\n        />\n        <EmailSubmitButton type=\"submit\">Submit</EmailSubmitButton> {/* Submit button */}\n        </form>\n        </EmailInputContainer>\n    );\n};\n\n// Export the EmailInput component for use in other parts of the app\nexport default EmailInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAGH,MAAM,CAACI,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAVMF,mBAAmB;AAWzB,MAAMG,eAAe,GAAGN,MAAM,CAACO,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMF,eAAe;AAUrB,MAAMG,iBAAiB,GAAGT,MAAM,CAACU,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAfMF,iBAAiB;AAgBvB,MAAMG,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,KAAK,EAAE;MACPF,aAAa,CAACE,KAAK,CAAC,CAAC,CAAC;IAC1B;EACJ,CAAC;;EAED;EACA,MAAMK,cAAc,GAAIF,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;MACnBJ,YAAY,CAACC,CAAC,CAAC,CAAC,CAAC;IACrB;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACC,mBAAmB;IAAAmB,QAAA,eACpBpB,OAAA;MAAMqB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC7BpB,OAAA,CAACI,eAAe;QAChBkB,IAAI,EAAC,OAAO,CAAC;QAAA;QACbC,WAAW,EAAC,kBAAkB,CAAC;QAAA;QAC/BC,KAAK,EAAEX,KAAM,CAAC;QAAA;QACdY,QAAQ,EAAGT,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE,CAAC;QAAA;QAC3CG,UAAU,EAAET,cAAe,CAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACF/B,OAAA,CAACO,iBAAiB;QAACe,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAnB,EAAA,CAlCMF,UAAU;AAAAsB,GAAA,GAAVtB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}